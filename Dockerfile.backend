FROM python:3.11-slim

WORKDIR /app

# Install system dependencies including network tools
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    locales \
    wget \
    dnsutils \
    iputils-ping \
    net-tools \
    ca-certificates \
    && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
    && locale-gen \
    && rm -rf /var/lib/apt/lists/*


# Set locale environment variables
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8

# Update CA certificates
RUN update-ca-certificates

# Copy requirements and install Python dependencies
COPY requirements-backend.txt .
RUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r requirements-backend.txt

# Copy application files
COPY database_models.py .
COPY lstm_model.py .
COPY integration.py .
COPY backtesting_system.py .
COPY backend_api.py .
COPY discord_notifications.py .

# Create necessary directories
RUN mkdir -p /app/data /app/models /app/logs /app/config

# Set environment variables
ENV PYTHONPATH=/app
ENV DATABASE_PATH=/app/data/trading_system.db
ENV MODEL_PATH=/app/models
ENV LOG_PATH=/app/logs
ENV CONFIG_PATH=/app/config

# Network environment variables
ENV PYTHONHTTPSVERIFY=0
ENV REQUESTS_CA_BUNDLE=""
ENV CURL_CA_BUNDLE=""

# Expose port
EXPOSE 8000

# Health check with network test
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health && curl -f https://query1.finance.yahoo.com || exit 1

# Run the application
CMD ["uvicorn", "backend_api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
