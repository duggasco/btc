services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.intel
    container_name: btc-trading-backend-intel
    ports:
      - "8090:8000"
    volumes:
      - ./storage/data:/app/data
      - ./storage/models:/app/models
      - ./storage/logs/backend:/app/logs
      - ./storage/config:/app/config
      - ./src/backend:/app/src:ro
    devices:
      # Enable Intel GPU access
      - /dev/dri:/dev/dri
    environment:
      - DATABASE_PATH=/app/data/trading_system.db
      - MODEL_PATH=/app/models
      - LOG_PATH=/app/logs
      - CONFIG_PATH=/app/config
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      # Intel optimization settings
      - KMP_BLOCKTIME=1
      - KMP_SETTINGS=1
      - KMP_AFFINITY=granularity=fine,compact,1,0
      - OMP_NUM_THREADS=4
      - MKL_NUM_THREADS=4
      # Enable Intel GPU if available
      - INTEL_GPU_ENABLE=1
    networks:
      - trading-network
    restart: unless-stopped
    group_add:
      # Add video group for GPU access
      - video
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: btc-trading-frontend-intel
    ports:
      - "8501:8501"
    volumes:
      - ./src/frontend:/app:ro
      - ./storage/data:/app/data:ro
      - ./storage/config:/app/config:ro
    environment:
      - API_BASE_URL=http://backend:8080
      - WS_URL=ws://backend:8000/ws
      - PYTHONUNBUFFERED=1
    networks:
      - trading-network
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  trading-network:
    driver: bridge