services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: btc-trading-backend
    ports:
      - "8080:8000"
    volumes:
      # Map persistent storage - Docker will create these directories
      - /storage/data:/app/data
      - /storage/models:/app/models
      - /storage/logs/backend:/app/logs
      - /storage/config:/app/config
      # Mount source code to /app/src (not /app) to avoid conflicts
      - ./src/backend:/app/src:ro
    environment:
      - DATABASE_PATH=/app/data/trading_system.db
      - MODEL_PATH=/app/models
      - LOG_PATH=/app/logs
      - CONFIG_PATH=/app/config
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      # Network settings
      - HTTP_PROXY=
      - HTTPS_PROXY=
      - NO_PROXY=localhost,127.0.0.1
    networks:
      - trading-network
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: btc-trading-frontend
    ports:
      - "8501:8501"
    volumes:
      # Map persistent storage
      - /storage/logs/frontend:/app/logs
      - /storage/config:/app/config
      # Mount source code to /app/src
      - ./src/frontend:/app/src:ro
    environment:
      - API_BASE_URL=http://backend:8000
      - LOG_PATH=/app/logs
      - CONFIG_PATH=/app/config
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - trading-network
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional Redis cache for performance
  redis:
    image: redis:7-alpine
    container_name: btc-trading-redis
    ports:
      - "6379:6379"
    networks:
      - trading-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    profiles:
      - cache

networks:
  trading-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
