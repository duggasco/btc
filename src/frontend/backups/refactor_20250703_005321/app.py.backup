import streamlit as st
import os
import sys

# Add the parent directory to path for imports
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# Page configuration
st.set_page_config(
    page_title="BTC Trading System",
    page_icon="₿",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://github.com/yourusername/btc-trading-system',
        'Report a bug': "https://github.com/yourusername/btc-trading-system/issues",
        'About': "# BTC Trading System\nAI-powered Bitcoin trading with real-time analysis"
    }
)

# Custom CSS
st.markdown("""
<style>
/* Main theme colors */
:root {
    --primary-color: #1f77b4;
    --success-color: #2ecc71;
    --danger-color: #e74c3c;
    --warning-color: #f39c12;
    --info-color: #3498db;
}

/* Enhanced metrics styling */
div[data-testid="metric-container"] {
    background-color: rgba(28, 131, 225, 0.1);
    border: 1px solid rgba(28, 131, 225, 0.2);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

/* Positive/Negative value colors */
.profit-positive { color: var(--success-color) !important; font-weight: bold; }
.profit-negative { color: var(--danger-color) !important; font-weight: bold; }

/* Trading mode badges */
.trading-badge {
    padding: 5px 15px;
    border-radius: 20px;
    font-weight: bold;
    text-align: center;
    margin: 5px;
}
.badge-active { background-color: var(--success-color); color: white; }
.badge-inactive { background-color: var(--danger-color); color: white; }
.badge-paper { background-color: var(--warning-color); color: white; }

/* WebSocket status indicator */
.ws-status {
    position: fixed;
    top: 70px;
    right: 20px;
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: bold;
    z-index: 1000;
}
.ws-connected { background-color: var(--success-color); color: white; }
.ws-disconnected { background-color: var(--danger-color); color: white; }

/* Enhanced buttons */
div.stButton > button {
    border-radius: 20px;
    font-weight: bold;
    transition: all 0.3s ease;
}
div.stButton > button:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0,0,0,0.2);
}

/* Chart containers */
.chart-container {
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
    padding: 20px;
    margin: 10px 0;
}
</style>
""", unsafe_allow_html=True)

# Sidebar with system status
with st.sidebar:
    st.markdown("## 🎯 BTC Trading System")
    st.markdown("---")
    
    # System health check
    health_placeholder = st.empty()
    
    # WebSocket status
    ws_status_placeholder = st.empty()
    
    st.markdown("---")
    st.markdown("### 📚 Quick Links")
    st.markdown("""
    - [API Documentation](/docs)
    - [GitHub Repository](https://github.com)
    - [Discord Community](https://discord.gg)
    """)
    
    st.markdown("---")
    st.markdown("### ⚡ Keyboard Shortcuts")
    st.markdown("""
    - `R` - Refresh data
    - `T` - Toggle trading
    - `P` - Switch to paper mode
    - `Esc` - Emergency stop
    """)

# Main content
st.markdown("""
# 🚀 Welcome to BTC Trading System

This is your central hub for AI-powered Bitcoin trading. Navigate through the pages using the sidebar to access different features:

- **📊 Dashboard** - Real-time BTC prices and market overview
- **📈 Signals** - AI-generated trading signals and analysis
- **💰 Portfolio** - Manage your positions and view P&L
- **📄 Paper Trading** - Practice with virtual funds
- **🔬 Analytics** - Advanced backtesting and performance metrics
- **⚙️ Settings** - Configure trading parameters and API keys

### 🔔 System Status
""")

# Display system status cards
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.info("**Trading Status**\n\n🟢 Active")
    
with col2:
    st.success("**WebSocket**\n\n✅ Connected")
    
with col3:
    st.warning("**Last Signal**\n\n📊 BUY (85%)")
    
with col4:
    st.error("**Alerts**\n\n⚠️ 2 Active")

# Quick actions
st.markdown("### ⚡ Quick Actions")
col1, col2, col3 = st.columns(3)

with col1:
    if st.button("🔄 Refresh All Data", use_container_width=True):
        st.rerun()
        
with col2:
    if st.button("📊 Run Backtest", use_container_width=True):
        st.switch_page("pages/5_🔬_Analytics.py")
        
with col3:
    if st.button("⚙️ Settings", use_container_width=True):
        st.switch_page("pages/6_⚙️_Settings.py")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: gray;'>
    <p>BTC Trading System v2.0 | Real-time data from multiple sources | AI-powered predictions</p>
</div>
""", unsafe_allow_html=True)
